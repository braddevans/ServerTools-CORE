import java.text.SimpleDateFormat

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.12.1'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = '3.0.0'
minecraft.version = '1.8.9-11.15.0.1663'
minecraft.mappings = 'snapshot_20151230'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile(group: 'ninja.leaping.configurate', name: 'configurate-hocon', version: '3.1') {
        exclude module: 'guava'
    }

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

version = "$minecraft.version-$version"
if (System.getenv().'BUILD_NUMBER' != null) {
    version += ".${System.getenv().'BUILD_NUMBER'}"
} else {
    version += ".0"
}

def commonManifest = [
        'Built-By'              : System.properties['user.name'],
        'Created-By'            : "${System.properties['java.version']} (${System.properties['java.vendor']})",
        'Implementation-Title'  : project.name,
        'Implementation-Version': project.version
]

jar {
    classifier = 'nodeps'
    manifest.mainAttributes(commonManifest)
}

def repackPackage = 'info.servertools.repack'
shadowJar {
    classifier = '' // This is now the main jar
    relocate 'ninja.leaping.configurate', "${repackPackage}.ninja.leaping.configurate"
    relocate 'com.typesafe.config', "${repackPackage}.com.typesafe.config"

    manifest.mainAttributes(commonManifest)
}

reobf {
    shadowJar { useSrgSrg() }
}

tasks.build.dependsOn reobfShadowJar

artifacts {
    archives shadowJar
}

processResources {

    from 'LICENSE'

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand([
                'version'     : project.version,
                'mcversion'   : project.minecraft.version,
                'url'         : project.url,
                'description' : project.description,
                'forgeversion': project.minecraft.forgeVersion
        ])
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

license {
    ext {
        name = project.name
        organization = project.organization
        year = project.inceptionYear
        url = project.url
    }
    include '**/*.java'
    header = file('HEADER.txt')
    sourceSets = project.sourceSets
    ignoreFailures = false
    strictCheck = true
    mapping { java = 'SLASHSTAR_STYLE' }
}

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
    task.options.fork = true
}

if (project.hasProperty('changelog')) {
    println "Changelog: $project.changelog"
}